@using PagedList.Mvc;
@using BOR.ViewModels;
@model WorkshopsAndCategories
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@Scripts.Render("~/Scripts/jquery-2.0.3.js")

@{
    ViewBag.Title = "Warsztaty";
}

<div class="container-fluid">
    <div class="row">
        <img src="~/Content/Images/Branding/WARSZTATY.jpg" class="img-responsive img-banner" alt="Off-road main" />
    </div>
</div>

<div class="container main-menu container-transparent">
    @if (Request.IsAuthenticated)
    {
        <p>
            @Html.ActionLink("Dodaj warsztat", "Create")
        </p>
    }
    
    <div class="myArticle workshop-article">
        <div class="row">
            @foreach (var item in Model.Categories)
            {
                <div class="col-xs-4 col-sm-2">
                    <a href="@Url.Action("Index", new { categoryID = item.ArticleID})">
                        <img class="center-block workshop-category-image img-responsive"
                             src="@(item.Images.Count() > 0 ? item.Images.First().Link : "")"
                             alt="@(item.Images.Count() > 0 ? item.Images.First().Link : "")"
                             title="@item.Title">
                    </a> 
                </div>
            }            
        </div>
    </div>

    @foreach (var item in Model.Workshops)
    {

        <div class="myArticle workshop-article">
            <div class="row">
                <div class="col-sm-3">
                    <a class="img-link" href="@item.Www">
                        <img class="img-thumbnail img-link workshop-logo center-block"
                             src="@(item.Images.Count() > 0 ? item.Images.First().Link : "")"
                             alt="@(item.Images.Count() > 0 ? item.Images.First().Name : "")" />
                    </a>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-xs-9">
                            <h1>@Html.DisplayFor(modelItem => item.Title)</h1>
                            <span class="workshop-link">@Html.DisplayFor(modelItem => item.Www)</span>
                        </div>
                        <div class="col-xs-3">
                            @if (item.Category != null)
                            {
                                <img class="center-block workshop-category-image img-responsive"
                                     src="@(item.Category.Images.Count() > 0 ? item.Category.Images.First().Link : "")"
                                     alt="@(item.Category.Images.Count() > 0 ? item.Category.Images.First().Link : "")">
                            }
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-8">
                            <div class="content workshop-description hideContent">
                                @Html.DisplayFor(modelItem => item.Text)
                            </div>
                            <div class="show-more"><a>(pokaż więcej)</a></div>
                            <br />
                            @if (Request.IsAuthenticated)
                            {
                                <span>(</span>@Html.ActionLink("Edytuj", "Edit", new { id = item.ArticleID })
                                <span>|</span>
                                @Html.ActionLink("Usuń", "Delete", new { id = item.ArticleID })<span>)</span>
                            }
                            <br />
                            @Html.ActionLink("Opinie >>", "Comments", new { id = item.ArticleID })
                        </div>
                        <div class="col-sm-4 workshop-address">
                            <h3>ADRES:</h3>
                            ul.@Html.DisplayFor(modelItem => item.Street) @Html.DisplayFor(modelItem => item.HouseNumber)
                            @{
                                if (item.ApartmentNumber != null && item.ApartmentNumber != "")
                                {
                                    <text>/ @Html.DisplayFor(modelItem => item.ApartmentNumber)</text>
                                }
                            }
                                            <br />
                            @{
                                if (item.Zipcode != null && item.Zipcode != "")
                                {
                                    <text>@Html.DisplayFor(modelItem => item.Zipcode), </text>
                                }
                            }
                            @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.Voivodship.Name)
                            <br />
                            <span class="workshop-email">@Html.DisplayFor(modelItem => item.Email)</span>
                            <br />
                            @Html.DisplayFor(modelItem => item.PhoneNo)                            
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <a class="img-link" href="@Url.Action("Map", "Workshops", new { id = item.ArticleID })">
                        <div class="map-canvas" id="map-canvas-@(item.ArticleID)"></div>
                    </a>
                </div>
            </div>
        </div>
    }
    Strona @(Model.Workshops.PageCount < Model.Workshops.PageNumber ? 0 : Model.Workshops.PageNumber) z @Model.Workshops.PageCount
    @Html.PagedListPager(Model.Workshops, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter, categoryID = ViewBag.CurrentCategory }))
</div>

@* google maps *@
<script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDb7yEklMf8WzBusF4pykg_j-KmegWgMoI">
</script>
<script type="text/javascript">
    @{
        <text>
            function initialize() {
        </text>
            foreach (var item in Model.Workshops) {
                string googleMapsAddress = "https://maps.googleapis.com/maps/api/geocode/json?address=" +
                    item.Street + "+" + item.HouseNumber + ",+" + item.City +
                    "&key=AIzaSyDICsovbKs7qwN0r6rqaQTW0-vksuLUaKw";
                var json = new WebClient().DownloadString(googleMapsAddress);
                dynamic data = Newtonsoft.Json.JsonConvert.DeserializeObject(json);
                string lat = @data.results[0].geometry.location.lat;
                string lng = @data.results[0].geometry.location.lng;
                string modelTitle = !String.IsNullOrEmpty(item.Title) ? item.Title : "";
                string title = modelTitle.Replace("'", " ");
                <text>
    
                    var myLatLng@(item.ArticleID) = new google.maps.LatLng(@lat, @lng);

                    var mapOptions@(item.ArticleID) = {
                        center: myLatLng@(item.ArticleID),
                        zoom: 17
                    };

                    var map@(item.ArticleID) = new google.maps.Map(document.getElementById('map-canvas-' + @item.ArticleID),
                        mapOptions@(item.ArticleID));

                    map@(item.ArticleID).setTilt(0);

                    var markerTitle@(item.ArticleID) ="@title";
                    var marker@(item.ArticleID) = new google.maps.Marker({
                        title: markerTitle@(item.ArticleID),
                        position: myLatLng@(item.ArticleID),
                        map: map@(item.ArticleID)
                    });
                </text>
            }
        <text>
        }
        google.maps.event.addDomListener(window, 'load', initialize);
        </text>
    }
</script>

<script>
    $(window).load(function() {
        @foreach (var item in Model.Workshops) {
    <text>
        var map@(item.ArticleID) = document.getElementById('map-canvas-' + @item.ArticleID);
        google.maps.event.trigger(map@(item.ArticleID), 'resize');
        </text>
        }
    });
</script>
@* end of google maps *@
