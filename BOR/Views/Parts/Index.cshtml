@using PagedList.Mvc;
@model BOR.ViewModels.ShopView

@{
    ViewBag.Title = "Części";
}

<div class="row">
    <img src="~/Content/Images/Branding/SKLEP.jpg" class="img-responsive img-banner" alt="Off-road main" />
</div>

<div class="container main-menu">
    @if (ViewBag.currentCategory != null)
    {
        <h4>@ViewBag.currentCategory</h4>
    }
    <div class="myArticle">
            @{
                int cnt = 0;
                foreach (var item in Model.Categories)
                {
                    if (cnt % 3 == 0)
                    {
                        @:<div class="row">
                    }
                    <div class="col-md-4">
                        <p>
                            <a href="@Url.Action("Index", new { categories = item.Title})">
                                <img class="img-thumbnail img-responsive category-symbol" src="@(item.Images.Count() > 0 ? item.Images.First().MiniatureLink : "")"
                                     alt="@(item.Images.Count() > 0 ? item.Images.First().Name : "")" />
                                @Html.DisplayFor(i => item.Title)
                                <br />
                                @Html.DisplayFor(i => item.Text)
                            </a>
                        </p>
                    </div>
                    if ((cnt - 2) >= 0 && (cnt - 2) % 3 == 0)
                    {
                        @:</div>
                    }
                    cnt++;
                }
            }
        @using (Html.BeginForm("Index", "Parts", FormMethod.Get))
        {
            <p>
                Szukaj: @Html.TextBox("searchString", ViewBag.CurrentFilter as String)
                <input type="submit" value="Szukaj" />
            </p>
        }
    </div>
    @if (Request.IsAuthenticated)
    {
        <p>
            @Html.ActionLink("Dodaj część", "Create")
        </p>
    }
    @using (Html.BeginForm("AddToCart", "Parts", new { category = ViewBag.currentCategory }, FormMethod.Post, null))
    {
        foreach (var item in Model.Parts)
        {
            <div class="myArticle workshop-comment">
                <div class="row">
                    <div class="col-sm-6">
                        <h4>@Html.DisplayFor(modelItem => item.Title)</h4>
                        <h6>@Html.DisplayFor(modelItem => item.Category.Title)</h6>
                    </div>
                    <div class="col-sm-3">
                        Cena: @(item.Longitude != null ? item.Longitude.ToString() : "-") zł
                    </div>
                    <div class="col-sm-3">
                        Do koszyka: 
                        @if (item.Longitude != null)
                        {
                            <input class="input-number" type="number" value="0" name="@item.ArticleID" min="0" />
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <img class="img-thumbnail img-responsive img-part" src="@(item.Images.Count > 0 ? item.Images.First().MiniatureLink : "")"
                             alt="@(item.Images.Count() > 0 ? item.Images.First().Name : "")" />
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(modelItem => item.Text)
                        <hr/>
                        @if (Request.IsAuthenticated)
                        {
                            <p>
                                @Html.ActionLink("Edytuj", "Edit", new { id = item.ArticleID }) |
                                @Html.ActionLink("Usuń", "Delete", new { id = item.ArticleID })
                            </p>
                        }
                    </div>
                </div>
            </div>
        }
        if (Model.Parts.Count() > 0)
        {
            <div class="row">
                <div class="col-xs-9 col-xs-offset-3 col-sm-3 col-sm-offset-9 button-addToCart">
                    <input type="submit" value="Dodaj do koszyka" class="btn btn-default" />
                </div>
            </div>
        }
    }
    @{
        var myPagedList = (PagedList.PagedList<BOR.Models.Article>) Model.Parts;
    }
    <br />
    Strona @(myPagedList.PageCount < myPagedList.PageNumber ? 0 : myPagedList.PageNumber) z @myPagedList.PageCount
    @Html.PagedListPager(myPagedList, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
    <br />
    <a href="javascript:history.back()">Powrót</a>
</div>
</div>